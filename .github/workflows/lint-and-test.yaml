# ********************************************************************************
#  Copyright (c) 2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  SPDX-License-Identifier: Apache-2.0
# *******************************************************************************/

name: Lint and Test

on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - "src/**"
      - "Cargo.*"
      - "tests/**"
  workflow_call: {}
  workflow_dispatch: {}

concurrency:
      group: ${{ github.ref }}-${{ github.workflow }}
      cancel-in-progress: true

env:
  RUST_TOOLCHAIN: ${{ vars.RUST_TOOLCHAIN || 'stable' }}
  RUSTFLAGS: -Dwarnings
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Run cargo check
        run: |
          cargo check --all --tests

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt
      - name: Run cargo fmt
        run: |
          cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy
      - name: Run cargo clippy
        run: |
          cargo clippy --version
          cargo clippy --all-targets -- -W warnings -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Install cargo-tarpaulin
        uses: taiki-e/install-action@cargo-tarpaulin
      - uses: Swatinem/rust-cache@v2
      - name: Show toolchain information
        working-directory: ${{github.workspace}}
        run: |
          rustup toolchain list
          cargo --version
      - name: Start Mosquitto
        run: |
          docker compose -f tests/mosquitto/docker-compose.yaml up --detach
      - name: Wait for MQTT broker to be available
        run: |
          until nc -z localhost 1883; do
            echo "Waiting for MQTT broker..."
            sleep 1
          done
      - name: Run tests and report code coverage
        run: |
          # enable nightly features so that we can also include Doctests
          RUSTC_BOOTSTRAP=1 cargo tarpaulin -o xml -o lcov -o html --doc --tests -- --include-ignored

      - name: Upload coverage report (xml)
        uses: actions/upload-artifact@v4
        with:
          name: Test Coverage Results (xml)
          path: cobertura.xml

      - name: Upload coberage report (lcov)
        uses: actions/upload-artifact@v4
        with:
          name: Test Coverage Results (lcov)
          path: lcov.info

      - name: Upload coberage report (html)
        uses: actions/upload-artifact@v4
        with:
          name: Test Coverage Results (html)
          path: tarpaulin-report.html

  build-docs:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with: 
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Run rustdoc
        run: |
          cargo doc --no-deps --all-features
